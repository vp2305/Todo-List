{"version":3,"sources":["LandingPage.js","firebase.js","Login.js","Register.js","StateProvider.js","Left_container.js","Tasks.js","Header.js","Page.js","Planned.js","Important.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["LandingPage","className","src","alt","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Login","history","useHistory","useState","email","setEmail","password","setPassword","type","value","onChange","e","target","onClick","preventDefault","signInWithEmailAndPassword","then","push","catch","error","alert","message","to","Register","username","setUsername","user","setUser","useEffect","unsubscribe","onAuthStateChanged","authUser","console","log","name","required","event","createUserWithEmailAndPassword","updateProfile","displayName","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useStateValue","useContext","Left_container","location","tasks","setTasks","planned","setPlanned","important","setImportant","classes","makeStyles","theme","root","display","drawer","width","flexShrink","drawerPaper","marginTop","opacity","useStyles","collection","doc","uid","onSnapshot","snapshot","docs","map","data","class","Drawer","variant","paper","anchor","List","ListItem","signOut","Divider","button","selected","length","Tasks","input","setInput","toolbar","mixins","content","marginLeft","drawerWidth","flexGrow","padding","spacing","color","orderBy","id","FormControl","InputLabel","Input","Button","disabled","add","timestamp","FieldValue","serverTimestamp","delete","Header","backgroundColor","palette","background","default","PermanentDrawerLeft","AppBar","position","appBar","Toolbar","Typography","noWrap","text","index","ListItemIcon","ListItemText","primary","paragraph","Planned","Important","App","dispatch","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.987fccf5.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./LandingPage.css\"\r\n\r\nfunction LandingPage() {\r\n    return (\r\n        <div className = \"landingPage\">\r\n            <img \r\n                className = \"landingPage__image\"\r\n                src = \"https://i.pinimg.com/originals/ec/eb/79/eceb7990b39fa62d4189f57f2076712f.png\"\r\n                alt = \"\"\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDpGwE3zql0N9hJBOrQIFhCCk1VPftQzWo\",\r\n    authDomain: \"todo-list-23.firebaseapp.com\",\r\n    projectId: \"todo-list-23\",\r\n    storageBucket: \"todo-list-23.appspot.com\",\r\n    messagingSenderId: \"445112306926\",\r\n    appId: \"1:445112306926:web:1c7bb5dddab86e2fe637ff\",\r\n    measurementId: \"G-QJW26D514Q\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage(); //this will be used to upload the pictures\r\n\r\nexport { db, auth, storage };","\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from './firebase';\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState(''); \r\n\r\n    const signIn=(e) => {\r\n        e.preventDefault();//this makes it so it doesnt reload\r\n        auth.signInWithEmailAndPassword(email, password).then(auth => {\r\n            history.push('/tasks')\r\n        }).catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className = \"login\">\r\n            {/* Logo */}\r\n            {/* Email */}\r\n            {/* Password */}\r\n            {/* Button to login */}\r\n            {/* Create new account */}\r\n            <div className = \"login__header\">\r\n                {/* <img \r\n                    className = \"login__logo\"\r\n                    src=\"https://to-do-cdn.microsoft.com/static-assets/c87265a87f887380a04cf21925a56539b29364b51ae53e089c3ee2b2180148c6/icons/logo.png\"\r\n                    alt = \"\"\r\n                /> */}\r\n                <h1 className = \"logo__text\">To-Do List</h1>\r\n            </div>\r\n\r\n            {/* This is where the email and password container will appear. */}\r\n            <div className = \"login__container\">\r\n                <form>\r\n                    <h5>Email</h5>\r\n                    <input type= 'text' value = {email} \r\n                        onChange={e=>setEmail(e.target.value)} /> {/* This is what gets the email from the user */}\r\n                    \r\n                    <h5>Password</h5>\r\n                    <input type= 'password' value={password}\r\n                    onChange={e=>setPassword(e.target.value)} />{/* This is what gets the password from the user */}\r\n                    \r\n                    <button type='submit' onClick={signIn}  \r\n                        className=\"login__signInButton\">\r\n                        Sign In\r\n                    </button>\r\n\r\n                    <p>----or----</p>\r\n\r\n                    <Link to = \"/register\">\r\n                        <button type = \"register\"\r\n                            className = \"clickregister__Button\">\r\n                            Create your Account\r\n                        </button>\r\n                    </Link>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from './firebase';\r\nimport \"./Register.css\"\r\n\r\nfunction Register() {\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState(''); \r\n    \r\n\r\n    useEffect(() =>{\r\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n          if (authUser){\r\n            //user has logged in...\r\n            console.log(authUser);\r\n            setUser(authUser);\r\n    \r\n          } else {\r\n            // user has logged out...\r\n            setUser(null);\r\n          }\r\n        })\r\n    \r\n        return () => {\r\n          // perform some cleanup actions\r\n          // this avoids overloading\r\n          unsubscribe();\r\n        }\r\n    }, [user, username]);\r\n    \r\n\r\n    const signUp = (event) => {\r\n        event.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        .then((authUser) => {\r\n            history.push('/tasks')\r\n            return authUser.user.updateProfile({\r\n              displayName: username,\r\n            })\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    }\r\n\r\n    return (\r\n        <div className = \"register\">\r\n            <div className = \"register__header\">\r\n                {/* <Link to = '/'>\r\n                    <img \r\n                        className = \"login__logo\"\r\n                        src=\"https://to-do-cdn.microsoft.com/static-assets/c87265a87f887380a04cf21925a56539b29364b51ae53e089c3ee2b2180148c6/icons/logo.png\"\r\n                        alt = \"\"\r\n                    />\r\n                </Link> */}\r\n                <h1 className = \"logo__text\">To-Do List</h1>\r\n               \r\n            </div>\r\n            <div className = \"register__container\">\r\n                <form>\r\n                    <h5>Username</h5>\r\n                    <input \r\n                        className = \"username__text\"\r\n                        type = \"text\"\r\n                        name=\"fname\" required\r\n                        value = {username}\r\n                        onChange = {e => setUsername(e.target.value)}\r\n                    />\r\n                    <h5>Email</h5>\r\n                    <input\r\n                        type = \"text\"\r\n                        value = {email}\r\n                        onChange = {e => setEmail(e.target.value)}\r\n                    />\r\n                    <h5>Password</h5>\r\n                    <input \r\n                        type = \"password\"\r\n                        value = {password}\r\n                        onChange = {e => setPassword(e.target.value)}\r\n                    />\r\n\r\n                    <button type = \"submit\" onClick = {signUp}\r\n                        className = \"register__button\">\r\n                        Sign Up\r\n                    </button>\r\n\r\n                    <p> ----or---- </p>\r\n\r\n                    <p>Already have an account?\r\n                        <Link to=\"/login\">\r\n                            <p className = \"signIn__again\">Sign In</p>\r\n                        </Link>\r\n                    </p>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { createContext, useContext, useReducer, Component } from \"react\";\r\n\r\n\r\n// Prepares the dataLayer\r\nexport const StateContext = createContext();\r\n\r\n// Wrap our app and provide the Data layer \r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\n// Pull information from the data layer\r\nexport const useStateValue = () => useContext(StateContext);\r\n  ","import React, { useEffect, useState } from 'react';\r\nimport \"./Left_container.css\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { auth, db } from './firebase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction Left_container({location}) {\r\n    const drawerWidth = 240;\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [planned, setPlanned] = useState([]);\r\n    const [important, setImportant] = useState([]);\r\n    const history = useHistory();\r\n    const[{ user } ] = useStateValue();\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          display: 'flex',\r\n        },\r\n\r\n        drawer: {\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n          width: drawerWidth,\r\n          marginTop:47,\r\n          opacity:0.7,\r\n\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    \r\n    useEffect(() => {\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('important')\r\n        .onSnapshot(snapshot => {\r\n            // console.log(snapshot.docs.map(doc => doc.data()))\r\n            setImportant(snapshot.docs.map(doc => \r\n                doc.data()))\r\n        })\r\n    }, [user]);\r\n    \r\n    useEffect(() => {\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('planned')\r\n        .onSnapshot(snapshot => {\r\n            setPlanned(snapshot.docs.map(doc => \r\n                doc.data()))\r\n        })\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('tasks')\r\n        .onSnapshot(snapshot => {\r\n            setTasks(snapshot.docs.map(doc => \r\n                doc.data()))\r\n        })\r\n    }, [user]);\r\n    \r\n    \r\n    const handleLogout = () =>{\r\n        if (user){\r\n            auth.signOut();\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    const check_location = () => {\r\n        if (location === \"tasks\"){\r\n            <ListItem button selected\r\n                onClick={e=>history.push('/tasks')}>\r\n                <HomeIcon className = \"user__homeIcon\"/>\r\n                Taskssss ({tasks?.length})\r\n            </ListItem>\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n        <div class = \"Left_container\">\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\"\r\n            >\r\n                <List className = \"Logout__option\">\r\n                    <ListItem>Hello, {user?.displayName}\r\n                    <button\r\n                        className = \"exit__button\" \r\n                        onClick={handleLogout}>\r\n                        <ExitToAppIcon />\r\n                    </button>\r\n                    </ListItem>\r\n                </List>\r\n\r\n                <Divider  />\r\n\r\n                    <List >\r\n                        <ListItem button selected={location == \"Tasks\"}\r\n                            onClick={e=>history.push('/tasks')}>\r\n                            <HomeIcon className = \"user__homeIcon\"/>\r\n                            Tasks ({tasks?.length})\r\n                        </ListItem>\r\n                        <ListItem button selected={location == \"Planned\"}\r\n                            onClick={e => history.push('/planned')}>\r\n                            <CalendarTodayIcon className = \"user__calenderIcon\"/>\r\n                                Planned ({planned?.length})\r\n                        </ListItem>\r\n                        <ListItem button selected={location == \"Important\"}\r\n                            onClick={e=>history.push('/important')}>\r\n                            <StarBorderIcon className = \"user__starIcon\"/>\r\n                            Important ({important?.length})\r\n                        </ListItem>\r\n                        \r\n                        <ListItem>Any feedback will be highly appreciated. 🙂</ListItem>\r\n                    </List>\r\n                <Divider />\r\n\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Left_container\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"./Tasks.css\";\r\nimport firebase from 'firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { auth, db } from './firebase';\r\nimport Left_container from './Left_container';\r\n\r\nfunction Tasks() {\r\n    const drawerWidth = 240;\r\n   \r\n    const [input, setInput] = useState('');\r\n    const[{ user } ] = useStateValue();\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        // necessary for content to be below app bar\r\n        toolbar: theme.mixins.toolbar,\r\n        content: {\r\n          marginLeft: drawerWidth + 12,\r\n          flexGrow: 1,\r\n          padding: theme.spacing(3),\r\n          color: \"white\",\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    \r\n\r\n    const addTasks = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection('users')\r\n            .doc(user?.uid)\r\n            .collection('tasks')\r\n            .add({\r\n            tasks: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput('');\r\n    }\r\n\r\n    // When the app loads we want to check who is logged in and get the todo based on that username.\r\n\r\n    useEffect(() => {\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('tasks')\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot(snapshot => {\r\n            setTasks(snapshot.docs.map(doc => \r\n                ({id: doc.id, tasks: doc.data().tasks})))\r\n        })\r\n    }, [user]);\r\n    \r\n\r\n    return (\r\n        <div className = \"tasks\">\r\n            <img className = \"background__image\"\r\n                    src = \"https://images3.alphacoders.com/102/thumb-1920-1028801.jpg\"\r\n                    alt = \"\"\r\n            />\r\n            <Left_container location = {\"Tasks\"}/>\r\n\r\n            <div className = {classes.content}>\r\n                {/* <div className={classes.toolbar} /> */} \r\n                <h2>Tasks</h2>\r\n                <Divider />\r\n                <p>Number of tasks for today: {tasks?.length}</p>\r\n\r\n                <form className = \"input__container\">                        \r\n                    \r\n                    <FormControl className = \"input__field\">\r\n                        <InputLabel>Write a Tasks📝🖋</InputLabel>\r\n                        <Input value = {input} onChange ={e => setInput(e.target.value)}/>\r\n                    </FormControl>\r\n                    <Button disabled = {!input} type = \"submit\" onClick = {addTasks}>Add</Button>               \r\n                \r\n                </form>\r\n\r\n                <p>\r\n                    {tasks.map(tasks => (\r\n                        <p className = \"task_line\"> - {tasks.tasks} \r\n                        <Button \r\n                            className = \"remove__task\"\r\n                            \r\n                            onClick = {e =>\r\n                                db\r\n                                .collection('users')\r\n                                .doc(user?.uid)\r\n                                .collection('tasks').doc(tasks.id).delete()}>\r\n                                <DeleteOutlineOutlinedIcon />\r\n                        </Button>\r\n                        </p>\r\n                    ))}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from './firebase';\r\nimport \"./Header.css\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction Header() {\r\n    const history = useHistory();\r\n    const[{ user } ] = useStateValue();\r\n    const handleLogout = () =>{\r\n        if (user){\r\n            auth.signOut();\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <div className = \"header\">\r\n            <div className = \"header__container\">\r\n                <Link to = \"/tasks\">\r\n                    <h2 className = \"header__text\">To-Do List</h2>\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\nexport default function PermanentDrawerLeft() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Permanent drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n\r\n      </Drawer>\r\n      <div className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Typography paragraph>\r\n          Hello this is a test..\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Heloooooooooooooooooooooo\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport \"./Planned.css\";\r\nimport firebase from 'firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { auth, db } from './firebase';\r\nimport Left_container from './Left_container';\r\n\r\nfunction Planned() {\r\n    const drawerWidth = 240;\r\n\r\n    const [planned, setPlanned] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const[{ user } ] = useStateValue();\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        // necessary for content to be below app bar\r\n        toolbar: theme.mixins.toolbar,\r\n        content: {\r\n          marginLeft: drawerWidth + 12,\r\n          flexGrow: 1,\r\n          padding: theme.spacing(3),\r\n          color: 'white',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    \r\n\r\n    const addPlanned = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection('users')\r\n            .doc(user?.uid)\r\n            .collection('planned')\r\n            .add({\r\n            planned: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput('');\r\n    }\r\n\r\n    // When the app loads we want to check who is logged in and get the todo based on that username.\r\n\r\n    useEffect(() => {\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('planned')\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot(snapshot => {\r\n            // console.log(snapshot.docs.map(doc => doc.data()))\r\n            setPlanned(snapshot.docs.map(doc => \r\n                ({id: doc.id, planned: doc.data().planned})))\r\n        })\r\n    }, [user]);\r\n   \r\n    return (\r\n        <div className = \"planned\">\r\n            <img className = \"background__image\"\r\n                    src = \"https://images7.alphacoders.com/858/thumb-1920-858181.jpg\"\r\n                    alt = \"\"\r\n            />\r\n            <Left_container location = \"Planned\" />\r\n            <div className = {classes.content}>\r\n                {/* <div className={classes.toolbar} /> */} \r\n                <h2>Planned Tasks</h2>\r\n                <Divider />\r\n                <p>Number of planned tasks: {planned?.length}</p>\r\n\r\n                <form className = \"input__container\">                        \r\n                    \r\n                    <FormControl className = \"input__field\">\r\n                        <InputLabel>Write a planned event...</InputLabel>\r\n                        <Input value = {input} onChange ={e => setInput(e.target.value)}/>\r\n                    </FormControl>\r\n\r\n                    <Button disabled = {!input}  type = \"submit\" onClick = {addPlanned}>Add</Button>               \r\n                </form>\r\n\r\n                <p>\r\n                    {planned.map(planned => (\r\n                        <p className = \"task_line\"> 📅  {planned.planned} \r\n                        \r\n                        <Button \r\n                            className = \"remove__task\"\r\n                            \r\n                            onClick = {e =>\r\n                                db\r\n                                .collection('users')\r\n                                .doc(user?.uid)\r\n                                .collection('planned').doc(planned.id).delete()}>\r\n                                <DeleteOutlineOutlinedIcon />\r\n                        </Button>\r\n                        </p>\r\n                    ))}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Planned\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"./Important.css\";\r\nimport firebase from 'firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { auth, db } from './firebase';\r\nimport Left_container from './Left_container';\r\n\r\nfunction Important() {\r\n    const drawerWidth = 240;\r\n\r\n    const [important, setImportant] = useState([]);\r\n    const [input, setInput] = useState('');\r\n\r\n    const[{ user } ] = useStateValue();\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        \r\n        // necessary for content to be below app bar\r\n        toolbar: theme.mixins.toolbar,\r\n        content: {\r\n          marginLeft: drawerWidth + 12,\r\n          flexGrow: 1,\r\n          padding: theme.spacing(3),\r\n          color: \"white\",\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    \r\n\r\n    const addImportant = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection('users')\r\n            .doc(user?.uid)\r\n            .collection('important')\r\n            .add({\r\n            important: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput('');\r\n    }\r\n\r\n    // When the app loads we want to check who is logged in and get the todo based on that username.\r\n\r\n    useEffect(() => {\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('important')\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot(snapshot => {\r\n            // console.log(snapshot.docs.map(doc => doc.data()))\r\n            setImportant(snapshot.docs.map(doc => \r\n                ({id: doc.id, important: doc.data().important})))\r\n        })\r\n    }, [user]);\r\n       \r\n\r\n    return (\r\n        <div className = \"important\">\r\n            <img className = \"background__image\"\r\n                    src = \"https://img.buzzfeed.com/buzzfeed-static/static/2017-04/6/16/asset/buzzfeed-prod-fastlane-03/sub-buzz-6808-1491510468-8.jpg?downsize=1600%3A%2A&output-quality=auto&output-format=auto\"\r\n                    alt = \"\"\r\n            />\r\n            <Left_container location = \"Important\"/>\r\n            <div className = {classes.content}>\r\n                {/* <div className={classes.toolbar} /> */} \r\n                <h2>Important Tasks</h2>\r\n                <Divider />\r\n                <p>Number of important tasks: {important?.length}</p>\r\n\r\n                <form className = \"input__container\">                        \r\n                    \r\n                    <FormControl className = \"input__field\">\r\n                        <InputLabel>Write a Important Event ❗❗❗</InputLabel>\r\n                        <Input value = {input} onChange ={e => setInput(e.target.value)}/>\r\n                    </FormControl>\r\n                    <Button disabled = {!input} type = \"submit\" onClick = {addImportant}>Add</Button>               \r\n                \r\n                </form>\r\n\r\n                <p>\r\n                    {important.map(important => (\r\n                        <p className = \"task_line\"> ⭐ {important.important} \r\n                        <Button \r\n                            className = \"remove__task\"\r\n                            \r\n                            onClick = {e =>\r\n                                db\r\n                                .collection('users')\r\n                                .doc(user?.uid)\r\n                                .collection('important').doc(important.id).delete()}>\r\n                                <DeleteOutlineOutlinedIcon />\r\n                        </Button>\r\n                        </p>\r\n                    ))}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Important\r\n","import './App.css';\nimport LandingPage from './LandingPage';\nimport Login from './Login';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Register from './Register';\nimport Tasks from './Tasks';\nimport Header from './Header';\nimport Page from './Page';\nimport { useEffect } from 'react';\nimport { auth } from './firebase';\nimport { useStateValue } from './StateProvider';\nimport Planned from './Planned';\nimport Important from './Important';\nimport MyCourse from './MyCourse';\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n  useEffect (() => {\n    // will only work once when the app component loads...\n    // kind of like an if statement...\n    auth.onAuthStateChanged(authUser =>{\n      console.log('THE USER IS >>> ', authUser);\n\n      if (authUser){\n        // the user just logged in / the user was logged in\n\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        })\n\n      } else {\n        // the user is logged out\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        })\n      }\n    })\n  }, [Tasks])\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          \n          <Route path = \"/important\">\n            <Header />\n            <Important />\n          </Route>\n\n          <Route path = \"/planned\">\n            <Header />\n            <Planned />\n          </Route>\n\n          <Route path = \"/tasks\">\n            <Header />\n            <Tasks />\n          </Route>\n\n          <Route path = \"/test\">\n            <Page />\n          </Route>\n\n          <Route path = \"/register\">\n            <LandingPage />\n            <Register />\n          </Route>\n\n          <Route path = \"/\">\n            <LandingPage />\n            <Login />\n          </Route>\n\n        </Switch>\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n\r\n    user: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type){\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n            default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState = {initialState} reducer = {reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}